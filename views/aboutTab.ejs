<style>
    .text-boxes .text-box:not([data-id="home"]) {
        display: none;
    }
</style>
<menu class="menu">
        
    <button class="menu__item active" data-target="home">
        <div class="menu__icon" >

            <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 179.1 145" >
  
                <g id="home-anm">
                    <path stroke-linejoin="round"  stroke-linecap="round" d="M70.5,80.1h40.7"/>
                    <path d="M35,64v80"/>
                    <path d="M145.1,143V63"/>
                    <path stroke-linecap="round" stroke-linejoin="round" d="M24.9,70l65.7-50.7L156.3,70"/>
                </g>
    
                <path stroke-linejoin="round" d="M145.1,117.6v33.1c0,1.5-1.2,2.8-2.8,2.8h-28.4c-1.5,0-2.8-1.2-2.8-2.8V126c0-11.3-9.2-20.5-20.5-20.5l0,0
                c-11.3,0-20.5,9.2-20.5,20.5v27.5h16H37.8c-1.5,0-2.8-1.2-2.8-2.8v-34.2"/>
    
            </svg>

        </div>
        <strong class="menu__text active">home</strong>
    </button>

    <button class="menu__item" data-target="strategy">
        <div class="menu__icon" >

            <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 179.1 145">

                <g id="strategy-anm" >
                    <path d="M84.1,50.4L72,64.7c-2,2.4-5.2,3.5-8.3,3l-40.1-6.8c-3.2-0.6-5.8,2.4-4.8,5.5L42,127.9c1.2,3.6,4.6,6.1,8.4,6.1
                    h81.6c3.9,0,7.3-2.6,8.5-6.3l21.5-61.4c0.9-3-1.7-6-4.9-5.4l-38.3,6.7c-3,0.6-6.2-0.5-8.2-2.8L97.4,50.2
                    C93.8,46.3,87.6,46.3,84.1,50.4z"/>
                </g>
                <path stroke-linecap="round" d="M38.8,153.5h105.5"/>
                <path stroke-linecap="round" d="M66.8,112.5h49.5"/>
                <path id="strategy-cir1" stroke-width="0" fill="currentColor" d="M32.4,37.5c0,5.8-4.7,10.5-10.5,10.5s-10.5-4.7-10.5-10.5S16.1,27,21.9,27S32.4,31.7,32.4,37.5z"/>
                <path id="strategy-cir2" stroke-width="0" fill="currentColor" d="M102.3,23.5c0,5.8-4.7,10.5-10.5,10.5s-10.5-4.7-10.5-10.5S86,13,91.8,13S102.3,17.7,102.3,23.5z"/>
                <path id="strategy-cir3" stroke-width="0" fill="currentColor" d="M169.6,37.5c0,5.8-4.7,10.5-10.5,10.5s-10.5-4.7-10.5-10.5S153.3,27,159.1,27S169.6,31.7,169.6,37.5z"/>
            
            </svg>

        </div>
        <strong class="menu__text">strategy</strong>
    </button>

    <button class="menu__item" data-target="period">
        <div class="menu__icon" >

            <svg class="icon"  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 179.1 145" >

                <g id="period-cir">
                    <path fill="currentColor" stroke-width="0" d="M96.5,141.7c0,3.9-3.1,7-7,7s-7-3.1-7-7s3.1-7,7-7C93.4,134.6,96.5,137.8,96.5,141.7z"/>
                    <path fill="currentColor" stroke-width="0" d="M78.2,126.7c0,3.9-3.1,7-7,7s-7-3.1-7-7c0-3.9,3.1-7,7-7S78.2,122.8,78.2,126.7z"/>
                    <path fill="currentColor" stroke-width="0" d="M110.6,120.5c0,3.9-3.1,7-7,7s-7-3.1-7-7s3.1-7,7-7S110.6,116.6,110.6,120.5z"/>
                
                </g>
                <g id="period-anm">
                    <path stroke-linecap="round" d="M30.8,24.7h118.3 M117.3,71.2l9.7-6.7c0.7-0.4,1.1-1.1,1.1-1.9V24.7H50v37.8"/>
                    <path stroke-linecap="round" d="M149.4,153.3H30.6 M75.5,90.7l-23.1,21.2c-1.6,1.4-2.4,3.4-2.4,5.6v35.9h78.1V113"/>
                    <g id="period-line">
                        <path stroke-linecap="round" d="M50,62.5l40,44.2"/>
                        <path stroke-linecap="round" d="M128.1,111.7L95.2,73.4"/>
                    </g>
                </g>
    
            </svg>

        </div>
        <strong class="menu__text">period</strong>
    </button>

    <button class="menu__item" data-target="contact">
        <div class="menu__icon" >

            <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 179.1 145" >

                <path stroke-linecap="round" d="M94,139c-4.8,1.3-8.8,1.7-11.4,1.8c0,0-18.3,1.1-36.9-11.6c-1.9-1.3-4.7-3.2-7.8-6.2c-1.7-1.6-2.9-2.9-3.4-3.6
                c0,0-3.6-4.2-6.1-8.6c-4.6-8.4-5.4-18.9-5.5-21l0,0V75.5v-39c0-0.7,0.5-1.3,1.2-1.5l58-14.2c0.2-0.1,0.5-0.1,0.7,0l57.9,14.7
                c0.7,0.2,1.1,0.8,1.1,1.5v29.7"/>
                <path id="security-cir" stroke-linecap="round" d="M158.3,120.7c0,18.3-14.8,33.1-33.1,33.1s-33-14.8-33-33.1s14.8-33.1,33.1-33.1S158.3,102.4,158.3,120.7z"/>
                <g id="security-strok">
                    <path stroke-linecap="round" d="M151.1,104.5l-25,25c-1.3,1.3-3.5,1.3-4.9,0l-9.1-9.1"/>
                    <path stroke-linecap="round" d="M82.6,43L23.1,62.3"/>
                    <path stroke-linecap="round" d="M82.6,68.4L23.1,87.6"/>
                </g>
    
            </svg>

        </div>
        <strong class="menu__text">Contact Us</strong>
    </button> 
</menu>

<div class="text-boxes">
    <div class="text-box" data-id="home">
        This is the home stuff
    </div>
    <div class="text-box" data-id="strategy">
        akhsjdhalksdh yes 2
    </div>
    <div class="text-box" data-id="period">
        stanford sdsdsdds
    </div>
    <div class="text-box" data-id="contact">
        contacts meeeeee
    </div>
</div>

<script>
   
const buttons = document.querySelectorAll(".menu__item");
let activeButton = document.querySelector(".menu__item.active");
const textBoxes = document.querySelectorAll(".text-boxes .text-box");

buttons.forEach(item => {
    const text = item.querySelector(".menu__text");
    setLineWidth(text, item);

    window.addEventListener("resize", () => {
        setLineWidth(text, item);
    });

    item.addEventListener("click", function() {
        if (this.classList.contains("active")) return;

        this.classList.add("active");

        if (activeButton) {
            activeButton.classList.remove("active");
            activeButton.querySelector(".menu__text").classList.remove("active");
        }

        activeButton = this;

        const targetId = this.getAttribute("data-target");
        updateTextBox(targetId);

        handleTransition(this, text);
    });
});



function setLineWidth(text, item) {
    const lineWidth = text.offsetWidth + "px";
    item.style.setProperty("--lineWidth", lineWidth);
}

function handleTransition(item, text) {
    item.addEventListener("transitionend", (e) => {
        if (e.propertyName !== "flex-grow" || !item.classList.contains("active")) return;

        text.classList.add("active");
    });
}

function updateTextBox(targetId) {
    textBoxes.forEach(box => {
        if (box.getAttribute("data-id") === targetId) {
            box.style.display = "block";
        } else {
            box.style.display = "none";
        }
    });
}
</script>





